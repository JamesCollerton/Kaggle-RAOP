dateDataframe
dateDataframe%dateDifferences <- diff(dateDataframe$Date)
diff(dateDataframe$Date)
dateDifferences <- as.POSIXct(strptime(dateDataframe$Date, "%Y-%m-%d %H:%M:%S")) - as.POSIXct(strptime(dateDataframe$Date, "%Y-%m-%d %H:%M:%S"))
dateDifferences
dateDifferences <- as.POSIXct(strptime(dateDataframe$Date[2:nrow(dateDataframe)], "%Y-%m-%d %H:%M:%S")) - as.POSIXct(strptime(dateDataframe$Date[1:nrow(dateDataframe) - 1], "%Y-%m-%d %H:%M:%S"))
dateDifferences
Date <- c("2009-10-01 10:00:00", "2009-10-01 09:00:00", "2009-10-01 08:00:00")
Value <- c(0, 1, 2)
dateDataframe <- data.frame(Date, Value)
dateDifferences <- c(0,
as.POSIXct(strptime(dateDataframe$Date[1:nrow(dateDataframe) - 1], "%Y-%m-%d %H:%M:%S")) -
as.POSIXct(strptime(dateDataframe$Date[2:nrow(dateDataframe)], "%Y-%m-%d %H:%M:%S")) )
Date <- c("2009-10-01 10:00:00", "2009-10-01 09:00:00", "2009-10-01 08:00:00")
Value <- c(0, 1, 2)
dateDataframe <- data.frame(Date, Value)
dateDataframe$dateDifferences <- c(0,
as.POSIXct(strptime(dateDataframe$Date[1:nrow(dateDataframe) - 1], "%Y-%m-%d %H:%M:%S")) -
as.POSIXct(strptime(dateDataframe$Date[2:nrow(dateDataframe)], "%Y-%m-%d %H:%M:%S")) )
dateDataframe
Date <- c("2009-10-01 10:00:00", "2009-10-01 09:00:00", "2009-10-01 08:00:00")
Value <- c(0, 1, 2)
dateDataframe <- data.frame(Date, Value)
dateDataframe$dateDifferences <- c(0,
as.string(
as.POSIXct(strptime(dateDataframe$Date[1:nrow(dateDataframe) - 1], "%Y-%m-%d %H:%M:%S")) -
as.POSIXct(strptime(dateDataframe$Date[2:nrow(dateDataframe)], "%Y-%m-%d %H:%M:%S")) ) )
Date <- c("2009-10-01 10:00:00", "2009-10-01 09:00:00", "2009-10-01 08:00:00")
Value <- c(0, 1, 2)
dateDataframe <- data.frame(Date, Value)
dateDataframe$dateDifferences <- c(0,
toString(
as.POSIXct(strptime(dateDataframe$Date[1:nrow(dateDataframe) - 1], "%Y-%m-%d %H:%M:%S")) -
as.POSIXct(strptime(dateDataframe$Date[2:nrow(dateDataframe)], "%Y-%m-%d %H:%M:%S")) ) )
Date <- c("2009-10-01 10:00:00", "2009-10-01 09:00:00", "2009-10-01 08:00:00")
Value <- c(0, 1, 2)
dateDataframe <- data.frame(Date, Value)
dateDataframe$dateDifferences <- c(0,
(
as.POSIXct(strptime(dateDataframe$Date[1:nrow(dateDataframe) - 1], "%Y-%m-%d %H:%M:%S")) -
as.POSIXct(strptime(dateDataframe$Date[2:nrow(dateDataframe)], "%Y-%m-%d %H:%M:%S")) ) )
Date <- c("2009-10-01 10:00:00", "2009-10-01 09:00:00", "2009-10-01 08:00:00")
Value <- c(0, 1, 2)
dateDataframe <- data.frame(Date, Value)
dateDataframe$dateDifferences <- c(0,
as.POSIXct(strptime(dateDataframe$Date[1:nrow(dateDataframe) - 1], "%Y-%m-%d %H:%M:%S")) -
as.POSIXct(strptime(dateDataframe$Date[2:nrow(dateDataframe)], "%Y-%m-%d %H:%M:%S")) )
dateDataframe$dateDifferences[1]
dateDataframe$dateDifferences[2]
dateDataframe$dateDifferences[3]
required_packages <- c("tm", "rjson", "KernSmooth", "SnowballC", "wordcloud")
install.packages(required_packages)
library('tm')
library("rjson")
library("KernSmooth")
library('SnowballC')
library('wordcloud')
setwd("~/Documents/Programming/Git_Folders/Kaggle-RAOP/Updated_Attempt/Data")
#Reads in the relevant .json file
meta_data <- fromJSON(file = "train.json")
head(unlist(meta_data))
head(unlist(meta_data$giver_username_if_known))
str(unlist(meta_data))
str(unlist(meta_data[[giver_username_if_known]]))
head(unlist(meta_data))
head(unlist(meta_data[[1]]))
head(unlist(meta_data[[1]]$giver_username_if_known))
str(meta_data)
head(meta_data[[i]]$request_title
)
head(meta_data[[1]]$request_title
)
meta_data <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
meta_data <- lapply(meta_data, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
do.call("rbind", meta_data)
head(meta_data)
head(meta_data$unix_timestamp_of_request)
meta_data <- fromJSON(file = "train.json")
#Initialises all the necessary vectors. This was just miles easier to do in Sublime Text.
meta_data <- lapply(meta_data, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
head(meta_data
)
head(meta_data[[1]])
head(meta_data[[1]]$giver_username_if_known)
meta_data[[1]][1]
meta_data[[1]][[1]]
meta_data <- fromJSON(file = "train.json")
head(meta_data)
required_packages <- c("tm", "rjson", "KernSmooth", "SnowballC", "wordcloud", "RJSONIO")
install.packages(required_packages)
install.packages(required_packages)
library("tm")
library("rjson")
library("KernSmooth")
library("SnowballC")
library("wordcloud")
library("RJSONIO")
setwd("~/Documents/Programming/Git_Folders/Kaggle-RAOP/Updated_Attempt/Data")
meta_data <- fromJSON(file = "train.json")
meta_data <- fromJSON("train.json")
meta_data <- lapply(meta_data, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
do.call("rbind", meta_data)
meta_data
meta_data <- fromJSON("train.json")
#Initialises all the necessary vectors. This was just miles easier to do in Sublime Text.
meta_data <- lapply(meta_data, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
head(meta_data)
head(meta_data[[1]])
head(meta_data[[1]][[1]])
str(meta_data)
unlist(meta_data[[1]])
unlist(meta_data[[1]])$requester_username
as.data.frame(unlist(meta_data[[1]]))
as.data.frame(unlist(meta_data[[1]]))$requester_username
unlist(meta_data[[1]])
meta_data[[]][1]
x1 = lapply(meta_data, function(l) l[[1]])
head(x1)
x1 = unlistlapply(meta_data, function(l) l[[1]]))
x1 = unlist(lapply(meta_data, function(l) l[[1]]))
head(x1)
x1[1]
#Sets working directory to the relevant space and brings up the appropriate library.
required_packages <- c("tm", "rjson", "KernSmooth", "SnowballC", "wordcloud")
install.packages(required_packages)
library('tm')
library("rjson")
library("KernSmooth")
library('SnowballC')
library('wordcloud')
setwd("~/Documents/Programming/Git_Folders/Kaggle-RAOP/Updated_Attempt/Data")
#Reads in the relevant .json file
meta_data <- fromJSON(file = "train.json")
#Initialises all the necessary vectors. This was just miles easier to do in Sublime Text.
giver_username_if_known <- c()
number_of_downvotes_of_request_at_retrieval <- c()
number_of_upvotes_of_request_at_retrieval <- c()
post_was_edited <- c()
request_id <- c()
request_number_of_comments_at_retrieval <- c()
request_text <- c()
request_text_edit_aware <- c()
request_title <- c()
requester_account_age_in_days_at_request <- c()
requester_account_age_in_days_at_retrieval <- c()
requester_days_since_first_post_on_raop_at_request <- c()
requester_days_since_first_post_on_raop_at_retrieval <- c()
requester_number_of_comments_at_request <- c()
requester_number_of_comments_at_retrieval <- c()
requester_number_of_comments_in_raop_at_request <- c()
requester_number_of_comments_in_raop_at_retrieval <- c()
requester_number_of_posts_at_request <- c()
requester_number_of_posts_at_retrieval <- c()
requester_number_of_posts_on_raop_at_request <- c()
requester_number_of_posts_on_raop_at_retrieval <- c()
requester_number_of_subreddits_at_request <- c()
requester_received_pizza <- c()
requester_subreddits_at_request <- c()
requester_upvotes_minus_downvotes_at_request <- c()
requester_upvotes_minus_downvotes_at_retrieval <- c()
requester_upvotes_plus_downvotes_at_request <- c()
requester_upvotes_plus_downvotes_at_retrieval <- c()
requester_user_flair <- c()
requester_username <- c()
unix_timestamp_of_request <- c()
unix_timestamp_of_request_utc <- c()
#Loop to turn all the information in the lists into something more usable.
for (i in 1:length(meta_data)){
giver_username_if_known[i]= unlist(lapply(meta_data, function(l) l[[1]]))
number_of_downvotes_of_request_at_retrieval[i] = meta_data[[i]]$number_of_downvotes_of_request_at_retrieval
number_of_upvotes_of_request_at_retrieval[i] = meta_data[[i]]$number_of_upvotes_of_request_at_retrieval
post_was_edited[i] = meta_data[[i]]$post_was_edited
request_id[i] = meta_data[[i]]$request_id
request_number_of_comments_at_retrieval[i] = meta_data[[i]]$request_number_of_comments_at_retrieval
request_text[i] = meta_data[[i]]$request_text
request_text_edit_aware[i] = meta_data[[i]]$request_text_edit_aware
request_title[i] = meta_data[[i]]$request_title
requester_account_age_in_days_at_request[i] = meta_data[[i]]$requester_account_age_in_days_at_request
requester_account_age_in_days_at_retrieval[i] = meta_data[[i]]$requester_account_age_in_days_at_retrieval
requester_days_since_first_post_on_raop_at_request[i] = meta_data[[i]]$requester_days_since_first_post_on_raop_at_request
requester_days_since_first_post_on_raop_at_retrieval[i] = meta_data[[i]]$requester_days_since_first_post_on_raop_at_retrieval
requester_number_of_comments_at_request[i] = meta_data[[i]]$requester_number_of_comments_at_request
requester_number_of_comments_at_retrieval[i] = meta_data[[i]]$requester_number_of_comments_at_retrieval
requester_number_of_comments_in_raop_at_request[i] = meta_data[[i]]$requester_number_of_comments_in_raop_at_request
requester_number_of_comments_in_raop_at_retrieval[i] = meta_data[[i]]$requester_number_of_comments_in_raop_at_retrieval
requester_number_of_posts_at_request[i] = meta_data[[i]]$requester_number_of_posts_at_request
requester_number_of_posts_at_retrieval[i] = meta_data[[i]]$requester_number_of_posts_at_retrieval
requester_number_of_posts_on_raop_at_request[i] = meta_data[[i]]$requester_number_of_posts_on_raop_at_request
requester_number_of_posts_on_raop_at_retrieval[i] = meta_data[[i]]$requester_number_of_posts_on_raop_at_retrieval
requester_number_of_subreddits_at_request[i] = meta_data[[i]]$requester_number_of_subreddits_at_request
requester_received_pizza[i] = meta_data[[i]]$requester_received_pizza
requester_subreddits_at_request[i] = length(meta_data[[i]]$requester_subreddits_at_request)
requester_upvotes_minus_downvotes_at_request[i] = meta_data[[i]]$requester_upvotes_minus_downvotes_at_request
requester_upvotes_minus_downvotes_at_retrieval[i] = meta_data[[i]]$requester_upvotes_minus_downvotes_at_retrieval
requester_upvotes_plus_downvotes_at_request[i] = meta_data[[i]]$requester_upvotes_plus_downvotes_at_request
requester_upvotes_plus_downvotes_at_retrieval[i] = meta_data[[i]]$requester_upvotes_plus_downvotes_at_retrieval
requester_user_flair[i] = length(meta_data[[i]]$requester_user_flair)
requester_username[i] = meta_data[[i]]$requester_username
unix_timestamp_of_request[i] = meta_data[[i]]$unix_timestamp_of_request
unix_timestamp_of_request_utc[i] = meta_data[[i]]$unix_timestamp_of_request_utc
}
#This part just makes a nice dataframe and gives nice titles.
meta_dataframe <- data.frame("giver_username_if_known" = unlist(lapply(meta_data, function(l) l[[1]])),
"number_of_downvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[2]])),
"number_of_upvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[3]])),
"post_was_edited" = unlist(lapply(meta_data, function(l) l[[4]])),
"request_id" = unlist(lapply(meta_data, function(l) l[[5]])),
"request_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[6]])),
"request_text" = unlist(lapply(meta_data, function(l) l[[7]])),
"request_text_edit_aware" = unlist(lapply(meta_data, function(l) l[[8]])),
"request_title" = unlist(lapply(meta_data, function(l) l[[9]])),
"requester_account_age_in_days_at_request" = unlist(lapply(meta_data, function(l) l[[10]])),
"requester_account_age_in_days_at_retrieval" = unlist(lapply(meta_data, function(l) l[[11]])),
"requester_days_since_first_post_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[12]])),
"requester_days_since_first_post_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[13]])),
"requester_number_of_comments_at_request" = unlist(lapply(meta_data, function(l) l[[14]])),
"requester_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[15]])),
"requester_number_of_comments_in_raop_at_request" = unlist(lapply(meta_data, function(l) l[[16]])),
"requester_number_of_comments_in_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[17]])),
"requester_number_of_posts_at_request" = unlist(lapply(meta_data, function(l) l[[18]])),
"requester_number_of_posts_at_retrieval" = unlist(lapply(meta_data, function(l) l[[19]])),
"requester_number_of_posts_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[20]])),
"requester_number_of_posts_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[21]])),
"requester_number_of_subreddits_at_request" = unlist(lapply(meta_data, function(l) l[[22]])),
"requester_received_pizza" = unlist(lapply(meta_data, function(l) l[[23]])),
"requester_subreddits_at_request" = unlist(lapply(meta_data, function(l) l[[24]])),
"requester_upvotes_minus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[26]])),
"requester_upvotes_minus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[27]])),
"requester_upvotes_plus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[28]])),
"requester_upvotes_plus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[29]])),
"requester_user_flair" = unlist(lapply(meta_data, function(l) l[[30]])),
"requester_username" = unlist(lapply(meta_data, function(l) l[[31]])),
"unix_timestamp_of_request" = unlist(lapply(meta_data, function(l) l[[32]])),
"unix_timestamp_of_request_utc" = unlist(lapply(meta_data, function(l) l[[33]]))
install.packages(required_packages)
install.packages(required_packages)
library('tm')
library("rjson")
library("KernSmooth")
library('SnowballC')
library('wordcloud')
setwd("~/Documents/Programming/Git_Folders/Kaggle-RAOP/Updated_Attempt/Data")
#Reads in the relevant .json file
meta_data <- fromJSON(file = "train.json")
meta_dataframe <- data.frame("giver_username_if_known" = unlist(lapply(meta_data, function(l) l[[1]])),
"number_of_downvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[2]])),
"number_of_upvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[3]])),
"post_was_edited" = unlist(lapply(meta_data, function(l) l[[4]])),
"request_id" = unlist(lapply(meta_data, function(l) l[[5]])),
"request_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[6]])),
"request_text" = unlist(lapply(meta_data, function(l) l[[7]])),
"request_text_edit_aware" = unlist(lapply(meta_data, function(l) l[[8]])),
"request_title" = unlist(lapply(meta_data, function(l) l[[9]])),
"requester_account_age_in_days_at_request" = unlist(lapply(meta_data, function(l) l[[10]])),
"requester_account_age_in_days_at_retrieval" = unlist(lapply(meta_data, function(l) l[[11]])),
"requester_days_since_first_post_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[12]])),
"requester_days_since_first_post_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[13]])),
"requester_number_of_comments_at_request" = unlist(lapply(meta_data, function(l) l[[14]])),
"requester_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[15]])),
"requester_number_of_comments_in_raop_at_request" = unlist(lapply(meta_data, function(l) l[[16]])),
"requester_number_of_comments_in_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[17]])),
"requester_number_of_posts_at_request" = unlist(lapply(meta_data, function(l) l[[18]])),
"requester_number_of_posts_at_retrieval" = unlist(lapply(meta_data, function(l) l[[19]])),
"requester_number_of_posts_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[20]])),
"requester_number_of_posts_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[21]])),
"requester_number_of_subreddits_at_request" = unlist(lapply(meta_data, function(l) l[[22]])),
"requester_received_pizza" = unlist(lapply(meta_data, function(l) l[[23]])),
"requester_subreddits_at_request" = unlist(lapply(meta_data, function(l) l[[24]])),
"requester_upvotes_minus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[26]])),
"requester_upvotes_minus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[27]])),
"requester_upvotes_plus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[28]])),
"requester_upvotes_plus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[29]])),
"requester_user_flair" = unlist(lapply(meta_data, function(l) l[[30]])),
"requester_username" = unlist(lapply(meta_data, function(l) l[[31]])),
"unix_timestamp_of_request" = unlist(lapply(meta_data, function(l) l[[32]])),
"unix_timestamp_of_request_utc" = unlist(lapply(meta_data, function(l) l[[33]]))
)
meta_dataframe <- data.frame("giver_username_if_known" = unlist(lapply(meta_data, function(l) l[[1]])),
"number_of_downvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[2]])),
"number_of_upvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[3]])),
"post_was_edited" = unlist(lapply(meta_data, function(l) l[[4]])),
"request_id" = unlist(lapply(meta_data, function(l) l[[5]])),
"request_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[6]])),
"request_text" = unlist(lapply(meta_data, function(l) l[[7]])),
"request_text_edit_aware" = unlist(lapply(meta_data, function(l) l[[8]])),
"request_title" = unlist(lapply(meta_data, function(l) l[[9]])),
"requester_account_age_in_days_at_request" = unlist(lapply(meta_data, function(l) l[[10]])),
"requester_account_age_in_days_at_retrieval" = unlist(lapply(meta_data, function(l) l[[11]])),
"requester_days_since_first_post_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[12]])),
"requester_days_since_first_post_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[13]])),
"requester_number_of_comments_at_request" = unlist(lapply(meta_data, function(l) l[[14]])),
"requester_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[15]])),
"requester_number_of_comments_in_raop_at_request" = unlist(lapply(meta_data, function(l) l[[16]])),
"requester_number_of_comments_in_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[17]])),
"requester_number_of_posts_at_request" = unlist(lapply(meta_data, function(l) l[[18]])),
"requester_number_of_posts_at_retrieval" = unlist(lapply(meta_data, function(l) l[[19]])),
"requester_number_of_posts_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[20]])),
"requester_number_of_posts_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[21]])),
"requester_number_of_subreddits_at_request" = unlist(lapply(meta_data, function(l) l[[22]])),
"requester_received_pizza" = unlist(lapply(meta_data, function(l) l[[23]])),
"requester_subreddits_at_request" = unlist(lapply(meta_data, function(l) l[[24]])),
"requester_upvotes_minus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[25]])),
"requester_upvotes_minus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[26]])),
"requester_upvotes_plus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[27]])),
"requester_upvotes_plus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[28]])),
"requester_user_flair" = unlist(lapply(meta_data, function(l) l[[29]])),
"requester_username" = unlist(lapply(meta_data, function(l) l[[30]])),
"unix_timestamp_of_request" = unlist(lapply(meta_data, function(l) l[[31]])),
"unix_timestamp_of_request_utc" = unlist(lapply(meta_data, function(l) l[[32]]))
)
length(unlist(lapply(meta_data, function(l) l[[1]])))
length(unlist(lapply(meta_data, function(l) l[[2]])))
length(unlist(lapply(meta_data, function(l) l[[3]])))
length(unlist(lapply(meta_data, function(l) l[[4]])))
length(unlist(lapply(meta_data, function(l) l[[5]])))
length(unlist(lapply(meta_data, function(l) l[[6]])))
for(i in 1:32){ print(length(unlist(lapply(meta_data, function(l) l[[i]])))) }
for(i in 1:32){ print(paste(length(unlist(lapply(meta_data, function(l) l[[i]]))), " ", i) }
for(i in 1:32){ print(paste(length(unlist(lapply(meta_data, function(l) l[[i]]))), " ", i)) }
for(i in 1:32){ print(paste(length(unlist(lapply(meta_data, function(l) l[[i]]))), " ", i)) }
unlist(lapply(meta_data, function(l) l[[24]])))
unlist(lapply(meta_data, function(l) l[[24]]))
for(i in 1:32){ print(paste(length(unlist(lapply(meta_data, function(l) l[[i]]))), " ", i)) }
for(i in 1:32){ print(paste(length(unlist(lapply(meta_data, function(l) l[[29]]))), " ", i)) }
for(i in 1:32){ print(paste(length(unlist(lapply(meta_data, function(l) l[[i]]))), " ", i)) }
unlist(lapply(meta_data, function(l) l[[29]]))
meta_dataframe <- data.frame("giver_username_if_known" = unlist(lapply(meta_data, function(l) l[[1]])),
"number_of_downvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[2]])),
"number_of_upvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[3]])),
"post_was_edited" = unlist(lapply(meta_data, function(l) l[[4]])),
"request_id" = unlist(lapply(meta_data, function(l) l[[5]])),
"request_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[6]])),
"request_text" = unlist(lapply(meta_data, function(l) l[[7]])),
"request_text_edit_aware" = unlist(lapply(meta_data, function(l) l[[8]])),
"request_title" = unlist(lapply(meta_data, function(l) l[[9]])),
"requester_account_age_in_days_at_request" = unlist(lapply(meta_data, function(l) l[[10]])),
"requester_account_age_in_days_at_retrieval" = unlist(lapply(meta_data, function(l) l[[11]])),
"requester_days_since_first_post_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[12]])),
"requester_days_since_first_post_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[13]])),
"requester_number_of_comments_at_request" = unlist(lapply(meta_data, function(l) l[[14]])),
"requester_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[15]])),
"requester_number_of_comments_in_raop_at_request" = unlist(lapply(meta_data, function(l) l[[16]])),
"requester_number_of_comments_in_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[17]])),
"requester_number_of_posts_at_request" = unlist(lapply(meta_data, function(l) l[[18]])),
"requester_number_of_posts_at_retrieval" = unlist(lapply(meta_data, function(l) l[[19]])),
"requester_number_of_posts_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[20]])),
"requester_number_of_posts_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[21]])),
"requester_number_of_subreddits_at_request" = unlist(lapply(meta_data, function(l) l[[22]])),
"requester_received_pizza" = unlist(lapply(meta_data, function(l) l[[23]])),
#                              "requester_subreddits_at_request" = unlist(lapply(meta_data, function(l) l[[24]])),
"requester_upvotes_minus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[25]])),
"requester_upvotes_minus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[26]])),
"requester_upvotes_plus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[27]])),
"requester_upvotes_plus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[28]])),
#                              "requester_user_flair" = unlist(lapply(meta_data, function(l) l[[29]])),
"requester_username" = unlist(lapply(meta_data, function(l) l[[30]])),
"unix_timestamp_of_request" = unlist(lapply(meta_data, function(l) l[[31]])),
"unix_timestamp_of_request_utc" = unlist(lapply(meta_data, function(l) l[[32]])))
head(meta_dataframe)
meta_dataframe <- data.frame("giver_username_if_known" = unlist(lapply(meta_data, function(l) l[[1]])),
"number_of_downvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[2]])),
"number_of_upvotes_of_request_at_retrieval" = unlist(lapply(meta_data, function(l) l[[3]])),
"post_was_edited" = unlist(lapply(meta_data, function(l) l[[4]])),
"request_id" = unlist(lapply(meta_data, function(l) l[[5]])),
"request_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[6]])),
"request_text" = unlist(lapply(meta_data, function(l) l[[7]])),
"request_text_edit_aware" = unlist(lapply(meta_data, function(l) l[[8]])),
"request_title" = unlist(lapply(meta_data, function(l) l[[9]])),
"requester_account_age_in_days_at_request" = unlist(lapply(meta_data, function(l) l[[10]])),
"requester_account_age_in_days_at_retrieval" = unlist(lapply(meta_data, function(l) l[[11]])),
"requester_days_since_first_post_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[12]])),
"requester_days_since_first_post_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[13]])),
"requester_number_of_comments_at_request" = unlist(lapply(meta_data, function(l) l[[14]])),
"requester_number_of_comments_at_retrieval" = unlist(lapply(meta_data, function(l) l[[15]])),
"requester_number_of_comments_in_raop_at_request" = unlist(lapply(meta_data, function(l) l[[16]])),
"requester_number_of_comments_in_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[17]])),
"requester_number_of_posts_at_request" = unlist(lapply(meta_data, function(l) l[[18]])),
"requester_number_of_posts_at_retrieval" = unlist(lapply(meta_data, function(l) l[[19]])),
"requester_number_of_posts_on_raop_at_request" = unlist(lapply(meta_data, function(l) l[[20]])),
"requester_number_of_posts_on_raop_at_retrieval" = unlist(lapply(meta_data, function(l) l[[21]])),
"requester_number_of_subreddits_at_request" = unlist(lapply(meta_data, function(l) l[[22]])),
"requester_received_pizza" = unlist(lapply(meta_data, function(l) l[[23]])),
"requester_upvotes_minus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[25]])),
"requester_upvotes_minus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[26]])),
"requester_upvotes_plus_downvotes_at_request" = unlist(lapply(meta_data, function(l) l[[27]])),
"requester_upvotes_plus_downvotes_at_retrieval" = unlist(lapply(meta_data, function(l) l[[28]])),
"requester_username" = unlist(lapply(meta_data, function(l) l[[30]])),
"unix_timestamp_of_request" = unlist(lapply(meta_data, function(l) l[[31]])),
"unix_timestamp_of_request_utc" = unlist(lapply(meta_data, function(l) l[[32]])))
downvotes <- data.frame(meta_dataframe$requester_received_pizza,
meta_dataframe$number_of_downvotes_of_request_at_retrieval)
#Now what we would expect to see is that as the number of downvotes increases the proportion of
#people recieving pizza = (People who recieved pizza)/ (People who did not recieve pizza) begins
#to decrease
#Creates a tabular version of the data.
downvote_table <- table(downvotes)
xvals <- unique(downvotes$meta_dataframe.number_of_downvotes_of_request_at_retrieval)
yvals <- downvote_table[2,]/downvote_table[1,]
plot(xvals, yvals, col = "dodgerblue", xlab = "Number of Downvotes",
ylab = "Proportion of Successful Pizza Requests", main = "Corellation between Number of Downvotes
and Proportion of Successful Pizza Requests", pch = 16)
lm_fit_df <- data.frame(xvals, yvals)
lm_fit_df <- lm_fit_df[which(lm_fit_df$yvals != Inf),]
fit
fit <- lm(lm_fit_df$yvals ~ lm_fit_df$xvals)
fit
fit$Intercept
fit$Coefficients
fit
summar(fit)
summary(fit)
summary(fit)$Coefficients
summary(fit)$coefficients
summary(fit)$coefficients$Estimate
summary(fit)$coefficients[Estimate]
summary(fit)$coefficients[[Estimate]]
summary(fit)$coefficients[,1]
summary(fit)$coefficients[,1][1]
summary(fit)$coefficients[,Estimate]
data.frame(summary(fit)$coefficients)
data.frame(summary(fit)$coefficients)$Estimate
abline(data.frame(summary(fit)$coefficients)$Estimate)
abline(data.frame(summary(fit)$coefficients)$Estimate, col = "firebrick1", lwd = 1.5)
head(upvote_table)
lm_fit_df <- data.frame(xvals, yvals)
lm_fit_df <- lm_fit_df[which(lm_fit_df$yvals != Inf),]
fit <- lm(lm_fit_df$yvals ~ lm_fit_df$xvals)
abline(data.frame(summary(fit)$coefficients)$Estimate, col = "firebrick1", lwd = 1.5)
downvote_table <- table(downvotes)
xvals <- unique(downvotes$meta_dataframe.number_of_downvotes_of_request_at_retrieval)
yvals <- downvote_table[2,]/downvote_table[1,]
plot(xvals, yvals, col = "dodgerblue", xlab = "Number of Downvotes",
ylab = "Proportion of Successful Pizza Requests", main = "Corellation between Number of Downvotes
and Proportion of Successful Pizza Requests", pch = 16)
#Fits a linear model to the data whilst ignoring all values that jet off to infinity.
lm_fit_df <- data.frame(xvals, yvals)
lm_fit_df <- lm_fit_df[which(lm_fit_df$yvals != Inf),]
fit <- lm(lm_fit_df$yvals ~ lm_fit_df$xvals)
abline(data.frame(summary(fit)$coefficients)$Estimate, col = "firebrick1", lwd = 1.5)
head(downvotes)
yvals <- downvote_table[2,]/downvote_table[1,]
yvals
downvote_table
view(downvote_table)
yvals <- downvote_table[2,]/(downvote_table[1,] downvote_table[2,])
yvals <- downvote_table[2,]/(downvote_table[1,] downvote_table[2,])
yvals <- downvote_table[2,]/(downvote_table[1,] + downvote_table[2,])
downvote_table <- table(downvotes)
xvals <- unique(downvotes$meta_dataframe.number_of_downvotes_of_request_at_retrieval)
yvals <- downvote_table[2,]/(downvote_table[1,] + downvote_table[2,])
plot(xvals, yvals, col = "dodgerblue", xlab = "Number of Downvotes",
ylab = "Proportion of Successful Pizza Requests", main = "Corellation between Number of Downvotes
and Proportion of Successful Pizza Requests", pch = 16)
lm_fit_df <- data.frame(xvals, yvals)
lm_fit_df <- lm_fit_df[which(lm_fit_df$yvals != Inf),]
fit <- lm(lm_fit_df$yvals ~ lm_fit_df$xvals)
abline(data.frame(summary(fit)$coefficients)$Estimate, col = "firebrick1", lwd = 1.5)
fit
downvote_table
downvote_table[1,]
downvote_table[1,][1]
row.names(downvotes_table)
row.names(downvote_table)
col.names(downvote_table)
colnames(downvote_table)
as.int(colnames(downvote_table))
as.numeric(colnames(downvote_table))
downvote_table <- table(downvotes)
xvals <- unique(as.numeric(colnames(downvote_table)))
yvals <- downvote_table[2,]/(downvote_table[1,] + downvote_table[2,])
plot(xvals, yvals, col = "dodgerblue", xlab = "Number of Downvotes",
ylab = "Proportion of Successful Pizza Requests", main = "Corellation between Number of Downvotes
and Proportion of Successful Pizza Requests", pch = 16)
downvote_table$FALSE
downvote_table["FALSE",]
downvote_table <- table(downvotes)
xvals <- unique(as.numeric(colnames(downvote_table)))
yvals <- downvote_table["FALSE",]/(downvote_table["TRUE",] + downvote_table["FALSE",])
plot(xvals, yvals, col = "dodgerblue", xlab = "Number of Downvotes",
ylab = "Proportion of Successful Pizza Requests", main = "Corellation between Number of Downvotes
and Proportion of Successful Pizza Requests", pch = 16)
xvals <- unique(as.numeric(colnames(downvote_table)))
yvals <- downvote_table["FALSE",]/(downvote_table["TRUE",] + downvote_table["FALSE",])
plot(xvals, yvals, col = "dodgerblue", xlab = "Number of Downvotes",
ylab = "Proportion of Successful Pizza Requests", main = "Corellation between Number of Downvotes
and Proportion of Successful Pizza Requests", pch = 16)
#Fits a linear model to the data whilst ignoring all values that jet off to infinity.
lm_fit_df <- data.frame(xvals, yvals)
lm_fit_df <- lm_fit_df[which(lm_fit_df$yvals != Inf),]
fit <- lm(lm_fit_df$yvals ~ lm_fit_df$xvals)
abline(data.frame(summary(fit)$coefficients)$Estimate, col = "firebrick1", lwd = 1.5)
abline
fit
cor(xvals, yvals, method = "pearson")
cor(yvals, xvals, method = "pearson")
cor(yvals, xvals, method = "pearson")
cov(yvals, xvals)
